{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/rgrunest/Developer/semantic-next/components/shared/NavMenu.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Component } from \"react\";\nimport { ThemeProvider } from \"@material-ui/core/styles\";\nimport theme from \"../../style/theme\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport Button from \"@material-ui/core/Button\";\n\nvar NavMenu =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(NavMenu, _Component);\n\n  function NavMenu(props) {\n    var _this;\n\n    _classCallCheck(this, NavMenu);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(NavMenu).call(this, props));\n    _this.state = {\n      navOpen: false\n    };\n    _this.toggleNav = _this.toggleNav.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(NavMenu, [{\n    key: \"toggleNav\",\n    value: function toggleNav() {\n      this.setState({\n        navOpen: !this.state.open\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(ThemeProvider, {\n        theme: theme,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, __jsx(Drawer, {\n        anchor: \"top\",\n        open: this.state.navOpen,\n        onClose: this.toggleNav,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }), __jsx(Button, {\n        onClick: this.toggleNav,\n        variant: \"contained\",\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, \"Hello Primary\"));\n    }\n  }]);\n\n  return NavMenu;\n}(Component);\n\nexport default NavMenu;","map":{"version":3,"sources":["/Users/rgrunest/Developer/semantic-next/components/shared/NavMenu.js"],"names":["Component","ThemeProvider","theme","Drawer","Button","NavMenu","props","state","navOpen","toggleNav","bind","setState","open"],"mappings":";;;;;;;;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,aAAT,QAA8B,0BAA9B;AACA,OAAOC,KAAP,MAAkB,mBAAlB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;;IAEMC,O;;;;;AACJ,mBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,iFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE;AADE,KAAb;AAGA,UAAKC,SAAL,GAAiB,MAAKA,SAAL,CAAeC,IAAf,+BAAjB;AALiB;AAMlB;;;;gCACW;AACV,WAAKC,QAAL,CAAc;AAAEH,QAAAA,OAAO,EAAE,CAAC,KAAKD,KAAL,CAAWK;AAAvB,OAAd;AACD;;;6BACQ;AACP,aACE,MAAC,aAAD;AAAe,QAAA,KAAK,EAAEV,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,MAAD;AACE,QAAA,MAAM,EAAC,KADT;AAEE,QAAA,IAAI,EAAE,KAAKK,KAAL,CAAWC,OAFnB;AAGE,QAAA,OAAO,EAAE,KAAKC,SAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAME,MAAC,MAAD;AAAQ,QAAA,OAAO,EAAE,KAAKA,SAAtB;AAAiC,QAAA,OAAO,EAAC,WAAzC;AAAqD,QAAA,KAAK,EAAC,SAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBANF,CADF;AAYD;;;;EAxBmBT,S;;AA2BtB,eAAeK,OAAf","sourcesContent":["import { Component } from \"react\";\nimport { ThemeProvider } from \"@material-ui/core/styles\";\nimport theme from \"../../style/theme\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport Button from \"@material-ui/core/Button\";\n\nclass NavMenu extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      navOpen: false\n    };\n    this.toggleNav = this.toggleNav.bind(this);\n  }\n  toggleNav() {\n    this.setState({ navOpen: !this.state.open });\n  }\n  render() {\n    return (\n      <ThemeProvider theme={theme}>\n        <Drawer\n          anchor=\"top\"\n          open={this.state.navOpen}\n          onClose={this.toggleNav}\n        ></Drawer>\n        <Button onClick={this.toggleNav} variant=\"contained\" color=\"primary\">\n          Hello Primary\n        </Button>\n      </ThemeProvider>\n    );\n  }\n}\n\nexport default NavMenu;\n"]},"metadata":{},"sourceType":"module"}